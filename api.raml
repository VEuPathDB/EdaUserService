#%RAML 1.0 Extension

extends: https://raw.githubusercontent.com/VEuPathDB/docs-api-schema/v2.0.2/libraries/base-service.raml

title: EDA Workspace User Service API
version: v1.0.0
mediaType: application/json

uses:
  error: https://raw.githubusercontent.com/VEuPathDB/docs-api-schema/v2.0.2/libraries/errors.raml
  lib: schema/library.raml

securitySchemes:
  header-auth:
    description: Authentication based on a WDK auth cookie.
    type:
      x-custom
    describedBy:
      headers:
        Auth_Key:
          description: Authorization header.
          type: string

#
# Endpoints
#

/public/analyses/{project-id}:
  displayName: Provide a list of public analyses
  get:
    responses:
      200:
        body:
          application/json:
            type: lib.AnalysisSummaryWithUser[]

# Note this is identical to the analyses/{id}/copy endpoint without the user validation
/import-analysis/{project-id}:

  /{analysis-id}:
    displayName: Copy an existing analysis
    get:
      responses:
        200:
          body:
            application/json:
              type: lib.AnalysisListPostResponse

    /info:
      displayName: Returns public information about an analysis
      get:
        responses:
          200:
            body:
              application/json:
                type: lib.SingleAnalysisPublicInfo

/metrics/user/{project-id}/analyses:
  displayName: Get usage metrics for EDA users by time period
  get:
    queryParameters:
      startDate:
        description: optional start date (yyyy-mm-dd)
        type: string
      endDate:
        description: optional end date (yyyy-mm-dd)
        type: string
      studyType:
        enum: [ALL, USER, CURATED]
        default: ALL
    responses:
      200:
        body:
          application/json:
            type: lib.UserAnalysisMetricsResponse

  /reports:
    displayName: Download usage metric reports for a given month
    get:
      queryParameters:
        reportMonth:
          description: Required report month (yyyy-mm)
          type: string
      responses:
        200:
          body:
            application/zip:
              type: lib.MetricsReportResponse

/users/{user-id}:

  /preferences/{project-id}:
    displayName: EDA-related user preferences
    get:
      responses:
        200:
          body:
            application/json:
              type: string
    put:
      body:
        application/json:
          type: string
      responses:
        202:

  /analyses/{project-id}:
    displayName: Analyses of a single user
    get:
      responses:
        200:
          body:
            application/json:
              type: lib.AnalysisSummary[]
    post:
      body:
        application/json:
          type: lib.AnalysisListPostRequest
      responses:
        200:
          body:
            application/json:
              type: lib.AnalysisListPostResponse
    patch:
      body:
        application/json:
          type: lib.AnalysisListPatchRequest
      responses:
        202:

    /{analysis-id}:
      displayName: Single analysis
      get:
        responses:
          200:
            body:
              application/json:
                type: lib.AnalysisDetail
      patch:
        body:
          application/json:
            type: lib.SingleAnalysisPatchRequest
        responses:
          202:
      delete:
        responses:
          202:

      /copy:
        displayName: Copy an existing analysis
        post:
          responses:
            200:
              body:
                application/json:
                  type: lib.AnalysisListPostResponse

  /derived-variables:
    displayName: Derived Variables

    get:
      displayName: List Derived Variables

      responses:
        200:
          body:
            application/json:
              type: lib.DerivedVariableGetResponse[]
        401:
        404:
        500:

    post:
      displayName: Create a Derived Variable

      body:
        application/json:
          type: lib.DerivedVariablePostRequest

      responses:
        200:
          body:
            application/json:
              type: lib.DerivedVariablePostResponse
        400:
        401:
        403:
        404:
        422:
        500:

    /{derived-variable-id}:
      get:
        displayName: Look up a Derived Variable

        responses:
          200:
            body:
              application/json:
                type: lib.DerivedVariableGetResponse
          401:
          403:
          404:
          500:

      patch:
        displayName: Update a Derived Variable
        body:
          application/json:
            type: lib.DerivedVariablePatchRequest
        responses:
          204:
          401:
          403:
          404:
          422:
          500: